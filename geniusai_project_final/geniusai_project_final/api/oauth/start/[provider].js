import { stringify } from 'query-string'; import crypto from 'crypto'; export default function handler(req,res){ const provider = req.query.provider; const state = crypto.randomBytes(16).toString('hex'); res.setHeader('Set-Cookie', `oauth_state=${state}; HttpOnly; Path=/; Max-Age=600; SameSite=Lax; Secure=${process.env.NODE_ENV==='production'}`); let authUrl=''; if(provider==='google'){ authUrl = 'https://accounts.google.com/o/oauth2/v2/auth?'+ stringify({client_id:process.env.GOOGLE_CLIENT_ID,redirect_uri: `${process.env.OAUTH_REDIRECT_BASE}/google`,response_type:'code',scope:'openid profile email',state}); } else if(provider==='linkedin'){ authUrl = 'https://www.linkedin.com/oauth/v2/authorization?'+ stringify({response_type:'code',client_id:process.env.LINKEDIN_CLIENT_ID,redirect_uri:`${process.env.OAUTH_REDIRECT_BASE}/linkedin`,scope:'r_liteprofile r_emailaddress',state}); } else return res.status(400).json({error:'unsupported'}); res.writeHead(302,{Location:authUrl}); res.end(); }